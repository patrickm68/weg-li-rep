openapi: 3.0.0

info:
  title: weg-li Recommender API
  version: 0.1.0

servers:
  - url: https://europe-west3-wegli-296209.cloudfunctions.net/api
  - url: https://api.weg-li.de/v1

tags:
  - name: user
    description: Add, remove or update user data.
  - name: analyze
    description: Analyze incident data in order to provide recommendations for important report data.
  - name: report
    description: Submit a new report.

paths:
  /user:
    post:
      tags:
        - user
      description: Create a new user for the analysis platform.
      responses:
        "200":
          description: "The operation was successful."
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserID'
                  access_token:
                    type: string
                    description: The corresponding access token for the newly created user account.
        "500":
          $ref: "#/components/responses/InternalServerError"
  /user/{user_id}:
    delete:
      tags:
        - user
      description: Deletes the information that is associated to the provided anonymous user id on the analysis platform.
      security:
        - AccessTokenAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserID'
      responses:
        "200":
          description: The operation was successful.
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          description: The requested user could not be found.
        "500":
          $ref: "#/components/responses/InternalServerError"
  /analyze/data:
    post:
      tags:
        - analyze
      security:
        - AccessTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - time
                - location
              properties:
                user_id:
                  $ref: '#/components/schemas/UserID'
                time:
                  type: integer
                  format: int64
                  description: The unix time of the violation in milliseconds.
                  example: 1605481357079
                location:
                  description: The location of the violation.
                  allOf:
                    - $ref: '#/components/schemas/Location'
      responses:
        "200":
          description: "Returns ordered list of recommendations with their score and corresponding severity type."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViolationSuggestion'
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /analyze/image/upload:
    get:
      description: Returns expiring cloud storage urls. Upload urls only accept PUT requests and expect files in jpeg format.
      tags:
        - analyze
      parameters:
        - name: quantity
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 5
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                  - google_cloud_urls
                properties:
                  token:
                    type: string
                    description: A unique image token
                    example: 82571c4a-7f07-4bdc-acdc-5b2745a00de3
                  google_cloud_urls:
                    type: array
                    items:
                      type: string
                    description: The Google Cloud Storage urls to which the image(s) should be uploaded.
                    example:
                      - https://api.google.com/...
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /analyze/image/{image_token}:
    get:
      description: Returns suggestions of the violating vehicle regarding license plate number, make, model and color based on the provided images ordered by descending confidence.
      tags:
        - analyze
      parameters:
        - name: image_token
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarSuggestions"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          description: No image(s) could be found for the provided token.
        "409":
          $ref: "#/components/responses/ConflictError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /report:
    post:
      tags:
        - report
      security:
        - AccessTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - report
              properties:
                user_id:
                  $ref: '#/components/schemas/UserID'
                report:
                  $ref: "#/components/schemas/Report"
      responses:
        "200":
          description: The operation was successful.
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /report/district/{zipcode}:
    get:
      tags:
        - report
      parameters:
        - name: zipcode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  public_order_office:
                    description: The public order office which is responsible for handling the violation reports.
                    type: object
                    properties:
                      name:
                        description: The name of the public order office (usually the corresponding city name).
                        type: string
                      email_address:
                        description: The email address to which a violation report must be sent.
                        type: string
        "404":
          description: No district was found for the provided zipcode. This might either be due to a non-existing zipcode or due to the district not being registered yet.
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  responses:
    BadRequestError:
      description: Bad Request. The request format did not conform to the specification and contains invalid structures or values.
    UnauthorizedError:
      description: Unauthorized. The request needs to be authorized and the access token is missing or invalid.
    ForbiddenError:
      description: Forbidden. The request needs to be authorized and the provided authorization scope does not match the required one.
    ConflictError:
      description: Conflict. An endpoint specific error occurred.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: Internal Server Error. An unspecified internal server error occurred.
  securitySchemes:
    AccessTokenAuth:
      type: http
      scheme: bearer
  schemas:
    UserID:
      type: string
      example: 550e8400-e29b-11d4-a716-446655440000
    Location:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: double
          description: The latitude value of the location's coordinates.
          example: 52.550081
        longitude:
          type: number
          format: double
          description: The longitude value of the location's coordinates.
          example: 13.370763
    CarSuggestions:
      type: object
      properties:
        suggestions:
          type: object
          properties:
            license_plate_number:
              type: array
              items:
                type: string
              description: Suggestions for the license plate number. Empty list when no license plate number recognized.
              example: ['B-WL 1234', 'KA KK 3455']
            make:
              type: array
              items:
                type: string
              description: Suggestions for the make. Empty list when no make recognized.
              example: ['Mercedes-Benz']
            model:
              type: array
              items:
                type: string
              description: Suggestions for the model. Empty list when no model recognized.
              example: ['A-Class']
            color:
              type: array
              items:
                type: string
              description: Suggestions for the color. Empty list when no color recognized.
              example: ['blue', 'white']
    ViolationSuggestion:
      type: object
      required:
        - error
      properties:
        violation_type:
          type: integer
          example: 6
        score:
          type: number
          example: 0.1563
        severity_type:
          type: integer
          example: 0
    Report:
      type: object
      properties:
        violation_type:
          type: number
          format: int32
          example: 1
        severity_type:
          type: number
          format: int32
          example: 0
        time:
          type: number
          format: int64
          example: 1606756404
          description: The date and time of the violation as Unix timestamp (in seconds since epoch).
        location:
          $ref: '#/components/schemas/Location'
        image_token:
          type: string
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        description:
          type: string
