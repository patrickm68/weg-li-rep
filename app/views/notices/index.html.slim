- set_title t('navigation.notices')
- set_crumbs t('navigation.notices') => notices_path, 'Übersicht' => url_for

= render 'activation_popup'

- if @notices.present? || params[:filter]
  = form_tag bulk_notices_path, method: :post do
    .panel.panel-default
      .panel-heading
        = link_to new_notice_path, class: 'btn btn-sm btn-success', title: 'Meldung erfassen' do
          span.glyphicon.glyphicon-plus>
          | Meldung erfassen
      .table-responsive
        table.table.table-striped.table-hover
          thead
            tr
              th
                .visible-xs-block.pull-right
                  a(href="#anchor" onclick="event.preventDefault(); document.getElementById('anchor').scrollIntoView({behavior: 'smooth', block: 'end', inline: 'nearest'})" data-turbolinks="false") ⤳
              th= Notice.human_attribute_name(:registration)
              th= Notice.human_attribute_name(:photos)
              th
                => Notice.human_attribute_name(:created_at)
                = link_to url_for(@table_params.merge(order: {created_at: @order_created_at}))
                  - if params[:order] && params[:order][:created_at] == 'ASC'
                    span.glyphicon.glyphicon-arrow-up.smaller
                  - else
                    span.glyphicon.glyphicon-arrow-down.smaller
              th
                .dropdown
                  button class="btn btn-default btn-xs dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"
                    => params[:filter] ? Notice.human_attribute_name(params[:filter][:status]) : Notice.human_attribute_name(:status)
                    span.caret
                  ul.dropdown-menu aria-labelledby="dropdownMenu1"
                    - @filter_status.each do |status|
                      li
                        = link_to url_for(@table_params.merge(filter: {status: status})) do
                          = render 'status', status: status
                    li role="separator" class="divider"
                    li= link_to 'kein Filter', url_for(@table_params.merge(filter: nil))
                span#anchor.pull-right(style="width:0px;")
          tbody
            - if @notices.present?
              - @notices.each do |notice|
                tr
                  td
                    .input-group.input-group-sm
                      .input-group-addon
                        = check_box_tag "selected[]", notice.id, false, class: 'select-all checkbox-addon'
                      = render 'actions', notice: notice
                  td
                    - if notice.incomplete?
                      = link_to([:edit, notice]) do
                        = render 'status', status: :incomplete
                    - else
                      = link_to(notice.registration, notice)
                  td
                    = link_to(notice) do
                      - notice.photos.each do |photo|
                        = image_tag(url_for_photo(photo, size: :thumb), class: 'index-photo')
                  td= link_to(d(notice.created_at), notice)
                  td= render 'status', status: notice.status

            - else
              tr
                td(colspan=7)= t('notices.nothing_found')
      .panel-footer
        .row
          .col-lg-12
            .btn-group.btn-group-sm.dropup
              label.btn
                => check_box_tag :select_all, '', false, onchange: "$('.select-all').prop('checked', $(this).prop('checked'))", class: 'checkbox-addon'
                | alle auswählen
              button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                span.caret
                span.sr-only Aktionen
              ul.dropdown-menu
                li
                  = button_tag name: :bulk_action, value: :analyze, type: :submit, class: 'btn btn-sm btn-link'
                    span.glyphicon.glyphicon-hourglass>
                    span Auswahl analysieren
                li
                  = button_tag name: :bulk_action, value: :share, type: :submit, class: 'btn btn-sm btn-link'
                    span.glyphicon.glyphicon-share>
                    span Auswahl melden
                li
                  = button_tag name: :bulk_action, value: :destroy, type: :submit, class: 'btn btn-sm btn-link', data: {confirm: 'Die Meldungen werden endgültig gelöscht'}
                    span.glyphicon.glyphicon-trash>
                    span Auswahl löschen

  .text-center
    = paginate @notices

  .well.well-sm
    strong Aktionen für Meldungen
    small
      ul.list-inline
        li
          span.glyphicon.glyphicon-eye-open>
          | Meldung ansehen
        li
          span.glyphicon.glyphicon-edit>
          | Meldung bearbeiten
        li
          span.glyphicon.glyphicon-trash>
          | Meldung löschen
        li
          span.glyphicon.glyphicon-share>
          | Anzeige erstatten
        li
          span.glyphicon.glyphicon-globe>
          | Anzeige ansehen
        li
          span.glyphicon.glyphicon-minus-sign>
          | Anzeige deaktivieren
        li
          span.glyphicon.glyphicon-plus-sign>
          | Anzeige aktivieren

    strong Status für Meldungen
    - (Notice.statuses.keys + [:incomplete]).each do |status|
      p= render 'status', status: status, legend: true

- else
  = render 'blank_slate'
