- set_title t('notices.new_notice')
- set_crumbs t('navigation.notices') => notices_path, 'beschreiben' => url_for

= render 'three_step', step: :second

- if @notice.incomplete?
  .row
    .col-lg-12
      .well.well-sm.callout
        p
          |
            Aus den Beweisfotos lassen sich automatisch Informationen ermitteln.
            EXIF-Metadaten liefern Standort und Uhrzeit, Bilderkennung und OCR liefern Kennzeichen, Hersteller, Farben etc.
            Die Algorithmen sind noch im Training, deshalb müssen lücken- oder fehlerhafte Daten selbst korrigiert werden.

  .row
    .col-lg-4
      - if @notice.analyzing?
        .progress.progress-striped.active
          #total-progress.progress-bar.progress-bar-success(style="width: 5%")

        = link_to url_for, class: 'btn btn-success btn-block' do
          span.glyphicon.glyphicon-repeat.smaller>
          span#analyze-progress kurz warten und dann aktualisieren
        javascript:
          setInterval(function(element) { element.style.width = Math.min(100, (parseInt(element.style.width) + 25)) + '%' }, 1000, document.getElementById('total-progress'));

      - else
        = link_to [:analyze, @notice], method: :patch, class: 'btn btn-success btn-block' do
          span.glyphicon.glyphicon-hourglass>
          span Beweisfotos analysieren
    .col-lg-8
      = render 'photos', notice: @notice, upload: true
- else
  .row
    .col-lg-12
      = render 'photos', notice: @notice, upload: true

- photo_doubles = @notice.photo_doubles
- if photo_doubles.present?
  .alert.alert-warning
    strong
      | Achtung, du hast schon Fotos mit identischem Namen hochgeladen, falls es OK ist einfach fortfahren:
      - photo_doubles.each do |photo|
        =< link_to photo.filename, photo.record

- date_doubles = @notice.date_doubles
- if date_doubles.present?
  .alert.alert-warning
    strong
      | Achtung, du hast schon eine Meldung für dieses Datum mit identischem Nummernschild, falls es OK ist einfach fortfahren:
      - date_doubles.each do |notice|
        =< link_to "Meldung ##{notice.id}", notice

hr.spacer

= form_errors @notice
= form_for @notice, html: {autocomplete: :off} do |form|
  = render 'notice_form', notice: @notice, form: form

  hr.spacer
  .row
    .col-lg-12
      .pull-right
        .btn-group
          = form.submit 'speichern', class: "btn btn-success"
