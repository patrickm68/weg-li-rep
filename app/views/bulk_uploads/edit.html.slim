- set_title t('navigation.bulk_uploads')
- set_crumbs t('navigation.bulk_uploads') => bulk_uploads_path, 'gruppieren' => url_for

.row
  .col-lg-12
    .well.well-sm.callout
      p
        | Mehrere Beweisfotos gruppiert nach Fahrzeug ins obere Feld ziehen, oder mit Hilfe des
        span.glyphicon.glyphicon-move<>
        | dorthin bewegen und anschließend eine neue Meldung daraus erstellen.

- if @bulk_upload.processing?
  .row
    .col-lg-4
      .progress.progress-striped.active
        #total-progress.progress-bar.progress-bar-success(style="width: 5%")

      = link_to url_for, class: 'btn btn-success btn-block' do
        span.glyphicon.glyphicon-repeat.smaller>
        span#analyze-progress kurz warten und dann aktualisieren
      javascript:
        setInterval(function(element) { element.style.width = Math.min(100, (parseInt(element.style.width) + 25)) + '%' }, 1000, document.getElementById('total-progress'));
    .col-lg-8
      = render 'callout', section: 'bulk_upload', key: 'processing'

- else
  - photos = @bulk_upload.ordered_photos(@order_column, @order_direction)
  = form_with model: @bulk_upload do |form|
    = hidden_field_tag :order_column, @order_column
    = hidden_field_tag :order_direction, @order_direction
    .row
      .col-lg-12
        fieldset Beweisfotos für neue Meldung
    .row
      .col-lg-8
        = render 'photo_list', bulk_upload: @bulk_upload, photos: [photos.first]
      .col-lg-4
        p= form.submit 'neue Meldung erstellen', class: "btn btn-success"

        .btn-group
          button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false"
            | sortiert #{@order_direction == 'asc' ? '⬆' : '⬇'} #{@order_column == 'filename' ? 'nach Dateinamen' : 'wie hochgeladen'}
            <span class="caret"></span>
          ul.dropdown-menu
            li
              = link_to '⬆ nach Dateinamen', url_for(order_column: 'filename', order_direction: 'asc')
              = link_to '⬇ nach Dateinamen', url_for(order_column: 'filename', order_direction: 'desc')
              = link_to '⬆ wie hochgeladen', url_for(order_column: 'created_at', order_direction: 'asc')
              = link_to '⬇ wie hochgeladen', url_for(order_column: 'created_at', order_direction: 'desc')

  .row
    .col-lg-12
      fieldset Verbleibende Beweisfotos
  .row
    .col-lg-12
      = render 'photo_list', bulk_upload: @bulk_upload, photos: photos - [photos.first]

  javascript:
    function ziehen(ev) {
      ev.dataTransfer.setData('text', ev.target.id);
    }

    function ablegenErlauben(ev, el) {
      ev.preventDefault();
      el.classList.add('well-active');
    }

    function ablegenLeave(ev, el) {
      el.classList.remove('well-active');
    }

    function ablegenEnter(ev, el) {
    }

    function ablegen(ev, el) {
      el.classList.remove('well-active');
      ev.preventDefault();
      var data = ev.dataTransfer.getData('text');
      el.children[0].appendChild(document.getElementById(data));
    }

    function ablegenMove(id) {
      const el = document.getElementById(id);
      const first = document.getElementsByClassName('droppable-list')[0];
      const last = document.getElementsByClassName('droppable-list')[1];
      if (Array.from(first.childNodes).includes(el)) {
        last.appendChild(el);
      } else {
        first.appendChild(el);
      }
    }

  hr.spacer

  .row
    .col-lg-12
      .well.well-sm.callout
        p
          |
            Sollte jedes der Beweisfotos zu einem einzelnen Vergehen gehören, dann kann hier auf Knopfdruck pro Beweisfoto jeweils eine neue Meldung erzeugt werden.

  = form_with model: @bulk_upload do |form|
    .row
      .col-lg-12
        .pull-right
          .btn-group
            = form.submit 'Pro Foto eine Meldung erzeugen', name: 'one_per_photo', class: "btn btn-success"

  hr.spacer

  - if @bulk_upload.notices.present?
    = render 'notice_list', notices: @bulk_upload.notices
