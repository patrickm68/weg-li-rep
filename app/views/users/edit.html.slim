- set_title t('navigation.profile')
- set_crumbs t('navigation.profile') => url_for, 'Bearbeiten' => url_for

.row
  .col-lg-6
    = form_for current_user, html: {class: "form-horizontal"} do |form|
      .panel.panel-default
        .panel-heading Persönliche Daten
        .panel-body
          = form.label :name, class: "control-label control-label-required"
          = form.text_field :name, class: "form-control", required: true, placeholder: 'z.B. Hanno Nym'
            = hint do
              | Vollständiger Name und ladungsfähige Adresse werden als Zeugendaten benötigt.

          = form.label :street, class: "control-label control-label-required"
          = form.text_field :street, class: "form-control", required: true, placeholder: 'z.B. Sylvesterallee 7'

          = form.label :city, class: "control-label control-label-required"
          = form.text_field :city, class: "form-control", required: true, placeholder: 'z.B. Hamburg'

          = form.label :zip, class: "control-label control-label-required"
          = form.text_field :zip, class: "form-control", required: true, placeholder: 'z.B. 22525'

          = form.label :appendix, class: "control-label control-label-required"
          = form.text_field :appendix, class: "form-control", placeholder: 'z.B. Müller GmbH'
          = hint do
            | Als ladungsfähige Adresse kann auch z.B. die des Arbeitgebers genutzt werden.

          = form.label :phone, class: "control-label"
          = form.text_field :phone, class: "form-control", placeholder: 'z.B. 040 600 90 76 98'
          = hint do
            | Ist eine Telefonnummer vorhanden, dann wird diese für Rückfragen mit angegeben.

        .panel-footer.clearfix
          .pull-right
            = form.submit "speichern", class: "btn btn-success"


    .panel.panel-default
      .panel-heading E-Mail Adresse

      .panel-body
        = form_for current_user do |form|
          .input-group
            = form.email_field :email, class: 'form-control', required: true
            span.input-group-btn
              = form.submit t('users.change_email'), class: "btn btn-default"
          = hint do
            | Nach dem ändern der E-Mail Adresse muss diese anschließend bestätigt werden.
      .panel-body
        - if current_user.validated?
          = link_to "#", class: "btn btn-default btn-block disabled"
            span>= t('users.email_confirmed')
            span.glyphicon.glyphicon-ok
        - else
          = button_to t('users.confirm_email'), confirmation_mail_user_path(current_user), method: :patch, class: "btn btn-primary btn-block"

    = form_for current_user, url: signature_user_path, html: {class: "form-horizontal"} do |form|
      .panel.panel-default
        .panel-heading Unterschrift
        - if current_user.signature.present?
          .panel-body
            =image_tag url_for(current_user.signature), class: 'signature'
        .panel-body
          = form.file_field :signature, id: 'fileupload', required: true, direct_upload: true, class: "form-control-file input-droppable", accept: 'image/jpeg,image/png'
          = hint do
            | Die Unterschrift wird für die Generierung von Anzeigen im PDF-Format genutzt.

        .panel-footer.clearfix
          .pull-right
            = form.submit "hochladen", class: "btn btn-success"

  .col-lg-6
    = form_for current_user, html: {class: "form-horizontal"} do |form|
      .panel.panel-default
        .panel-heading Einstellungen
        .panel-body
          = form.label :nickname, class: "control-label control-label-required"
          = form.text_field :nickname, class: "form-control", required: true
          = hint do
            | Der Spitzname wird im öffentlichen Profil verwendet.

          - User.bitfields[:flags].keys.each do |key|
              .checkbox
                label
                  = form.check_box key
                  = t("users.flags.#{key}")

        .panel-footer.clearfix
          .pull-right
            = form.submit "speichern", class: "btn btn-success"

    .panel.panel-default
      .panel-heading= t('users.authorizations')
      .panel-body
        - existing_providers = current_user.authorizations.map(&:provider)
        - login_links do |name, path, key|
          p
            - if existing_providers.include?(key)
              = link_to "#", class: "btn btn-default btn-block disabled"
                span>= name
                span.glyphicon.glyphicon-ok
            - else
              = link_to(t('users.connect_via', provider: name), path, method: :post, data: { turbolinks: false }, class: "btn btn-default btn-block")


    - if current_user.api_token?
      .panel.panel-default
        .panel-heading API-Token
        .panel-body
          = text_field_tag(:api_token, current_user.api_token, disabled: true, class: "form-control")
          = button_tag class: "btn btn-default btn-block", onclick: "event.preventDefault(); copyToClipboard('#{t('notices.copy_hint')}', '#{current_user.api_token}')" do
            span.glyphicon.glyphicon-list-alt>
            span API-Token kopieren


    .panel.panel-default
      .panel-heading= t('users.actions')
      .panel-body
        = button_to t('users.delete_account'), user_path(current_user), method: :delete, data: {confirm: 'Den Account und alle Daten wirklich löschen?'}, class: "btn btn-danger btn-block"
